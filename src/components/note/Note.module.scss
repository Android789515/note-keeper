@use 'sass:list';

@use '../../breakpoints';
@use '../../mixins';

$rounded-corners: 10px;

.note {
  display: grid;
  grid-template-rows: max-content 1fr;

  min-width: 10.0416875em;
  max-width: 15.5em;
  min-height: 13.0416875em;

  padding-bottom: .25em;
  border-radius: $rounded-corners;

  transform: scale(0) translateX(0);
  transition: transform 500ms;
}
.note:not(.note:only-of-type) {
  margin-bottom: 2em;
}

.noteOnMount {
  transform: scale(1);
}

.noteOnDestroy {
  transform: translateX(100vw);
}

.noteHeader {
  @include mixins.clickable;

  display: flex;
  justify-content: flex-end;

  height: 1.5em;

  border-top-left-radius: $rounded-corners;
  border-top-right-radius: $rounded-corners;
}

.closeButton {
  @include mixins.unstyled-button;
  @include mixins.clickable;

  font-weight: 600;

  display: inline-block;

  margin: 0 0 0 auto;
  padding-right: .5em;
}

.noteBody {
  word-break: break-word;
  white-space: pre-wrap;

  padding: .5em 1em;
  margin: 0;
}

.noteBody:focus {
  outline: solid lightblue;
}

$layoutChange: list.nth(breakpoints.$main-breakpoints, 1);
@media (min-width: $layoutChange) {
  .note {
    min-height: 9.0416875em;

    transform: scale(0) translateY(0);
  }
  .note:not(.note:only-of-type) {
    margin: 0;
  }

  .noteOnMount {
    transform: scale(1);
  }

  .noteOnDestroy {
    transform: translateY(-100vh);
  }
}

$notesSizeIncrease: list.nth(breakpoints.$main-breakpoints, 2);
@media (min-width: $notesSizeIncrease) {
  .note {
    min-width: 13.0416875em;
    max-width: 13.5em;
    min-height: 11.0416875em;
  }
}